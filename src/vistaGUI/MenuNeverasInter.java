/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistaGUI;

import controlador.ManejadorNeveras;
import controlador.ManejadorObjetos;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import modelo.CategoriaElectrodomesticos;
import modelo.Marca;
import modelo.Neveras;

/**
 *
 * @author Daniel
 */
public class MenuNeverasInter extends javax.swing.JFrame {

    /**
     * Creates new form MenuNeverasInter
     */
    ManejadorObjetos manobj;
    ManejadorNeveras mannev;
    Integer idMarcaTemporal = null;
    String nombreMarcaTemporal = "";
    DefaultTableModel model;
    int indiceFila = 0;
    String[] dato = new String[11];
    JFileChooser fileChooser = new JFileChooser();
    ImageIcon image = null;
    File archivo = null;
    String ruta = "E:\\daniel\\Descargas\\graySquare.jpeg";
    JLabel labelImagen = new JLabel("", new ImageIcon(ruta), JLabel.CENTER);

    public MenuNeverasInter() {
        initComponents();
        this.setLocationRelativeTo(null);
        manobj = new ManejadorObjetos();
        mannev = new ManejadorNeveras();
        model = new DefaultTableModel() {
            @Override
            public Class<?> getColumnClass(int column) {
                switch (column) {
                    case 11:
                        return ImageIcon.class;
                    default:
                        return String.class;
                }
            }
        };;        
        model.addColumn("Id");
        model.addColumn("Nombre Marca");
        model.addColumn("Nombre");
        model.addColumn("Cantidad");
        model.addColumn("Precio");
        model.addColumn("Color");
        model.addColumn("Capacidad Congelador");
        model.addColumn("Capacidad Frigorífico");
        model.addColumn("Material Nevera");
        model.addColumn("Tamaño Nevera (m)");
        model.addColumn("Sistema Nevera");
        model.addColumn("Imagen");

        jTable1.setModel(model);
        jTable1.getColumnModel().getColumn(0).setMinWidth(30);
        jTable1.getColumnModel().getColumn(11).setMinWidth(150);
        model.insertRow(indiceFila, dato);
        inicializarComboBox();
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        fileChooser.addChoosableFileFilter(imageFilter);
        panelImagen.setPreferredSize(new Dimension(132, 132));
        panelImagen.add(labelImagen, BorderLayout.CENTER);
        jTable1.setRowHeight(150);
        jTable1.setRowMargin(5);
    }

    public void inicializarComboBox() {
        for (int i = 0; i < manobj.arregloMarcas.size(); i++) {
            jComboBoxMarca.addItem(manobj.arregloMarcas.get(i).getDescripcion());
        }
    }

    public void limpiar() {
        jTextFieldId.setText("");
        jTextFieldNombre.setText("");
        jTextFieldCantidad.setText("");
        jTextFieldPrecio.setText("");
        jTextFieldColor.setText("");
        jTextFieldCapacidadCongelador.setText("");
        jTextFieldCapacidadFrigorifico.setText("");
        jTextFieldMaterialNevera.setText("");
        jTextFieldTamañoNevera.setText("");
        jTextFieldSistemaNevera.setText("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelCapacidadFrigorifico = new javax.swing.JLabel();
        jLabelMaterialNevera = new javax.swing.JLabel();
        jLabelTamañoNevera = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jComboBoxMarca = new javax.swing.JComboBox<>();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldCantidad = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jTextFieldCapacidadCongelador = new javax.swing.JTextField();
        jTextFieldCapacidadFrigorifico = new javax.swing.JTextField();
        jTextFieldMaterialNevera = new javax.swing.JTextField();
        jTextFieldTamañoNevera = new javax.swing.JTextField();
        jLabelMarca = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabelCantidad = new javax.swing.JLabel();
        jLabelSistemaNevera = new javax.swing.JLabel();
        jTextFieldSistemaNevera = new javax.swing.JTextField();
        jLabelColor = new javax.swing.JLabel();
        jTextFieldColor = new javax.swing.JTextField();
        jLabelCapacidadCongelador = new javax.swing.JLabel();
        jButtonConsultarUno = new javax.swing.JButton();
        jButtonConsultarTodo = new javax.swing.JButton();
        jButtonBorrarUno = new javax.swing.JButton();
        jButtonBorrarTodos = new javax.swing.JButton();
        jButtonInsertar = new javax.swing.JButton();
        jButtonModificar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelMensaje = new javax.swing.JLabel();
        jButtonOrdenarID = new javax.swing.JButton();
        jButtonOrdenarNombreAsc = new javax.swing.JButton();
        jButtonOrdenarPrecioAsc = new javax.swing.JButton();
        jButtonOrdenarNombreDesc = new javax.swing.JButton();
        jButtonOrdenarPrecioDesc = new javax.swing.JButton();
        botonFileChooserExaminar = new javax.swing.JButton();
        panelImagen = new javax.swing.JPanel();

        setTitle("Neveras");

        jLabelCapacidadFrigorifico.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCapacidadFrigorifico.setText("Capacidad Frigorifico");

        jLabelMaterialNevera.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelMaterialNevera.setText("Material Nevera");

        jLabelTamañoNevera.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTamañoNevera.setText("Tamaño Nevera (m)");

        jComboBoxMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMarcaItemStateChanged(evt);
            }
        });

        jTextFieldCapacidadCongelador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCapacidadCongeladorActionPerformed(evt);
            }
        });

        jLabelMarca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelMarca.setText("Marca");

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI Historic", 3, 36)); // NOI18N
        jLabelTitulo.setText("Neveras");

        jLabelNombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelNombre.setText("Nombre");

        jLabelId.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelId.setText("ID");

        jLabelPrecio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelPrecio.setText("Precio");

        jLabelCantidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCantidad.setText("Cantidad");

        jLabelSistemaNevera.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelSistemaNevera.setText("Sistema Nevera");

        jLabelColor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelColor.setText("Color");

        jLabelCapacidadCongelador.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCapacidadCongelador.setText("Capacidad Congelador");

        jButtonConsultarUno.setText("Consultar Uno");
        jButtonConsultarUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarUnoActionPerformed(evt);
            }
        });

        jButtonConsultarTodo.setText("Consultar Todo");
        jButtonConsultarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarTodoActionPerformed(evt);
            }
        });

        jButtonBorrarUno.setText("Borrar Uno");
        jButtonBorrarUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarUnoActionPerformed(evt);
            }
        });

        jButtonBorrarTodos.setText("Borrar Todos");
        jButtonBorrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarTodosActionPerformed(evt);
            }
        });

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabelMensaje.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelMensaje.setText("Estado");

        jButtonOrdenarID.setText("Ordenar ID");
        jButtonOrdenarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarIDActionPerformed(evt);
            }
        });

        jButtonOrdenarNombreAsc.setText("Ordenar Nombre Ascendente");
        jButtonOrdenarNombreAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarNombreAscActionPerformed(evt);
            }
        });

        jButtonOrdenarPrecioAsc.setText("Ordenar Precio Ascendente");
        jButtonOrdenarPrecioAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarPrecioAscActionPerformed(evt);
            }
        });

        jButtonOrdenarNombreDesc.setText("Ordenar Nombre Descendente");
        jButtonOrdenarNombreDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarNombreDescActionPerformed(evt);
            }
        });

        jButtonOrdenarPrecioDesc.setText("Ordenar Precio Descendente");
        jButtonOrdenarPrecioDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarPrecioDescActionPerformed(evt);
            }
        });

        botonFileChooserExaminar.setText("Examinar...");
        botonFileChooserExaminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFileChooserExaminarActionPerformed(evt);
            }
        });

        panelImagen.setBackground(new java.awt.Color(204, 204, 204));
        panelImagen.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelId)
                                            .addComponent(jLabelMarca)
                                            .addComponent(jLabelNombre)
                                            .addComponent(jLabelCantidad)
                                            .addComponent(jLabelPrecio))
                                        .addGap(45, 45, 45))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelColor)
                                        .addGap(48, 48, 48)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jComboBoxMarca, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldPrecio)
                                    .addComponent(jTextFieldColor, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(80, 80, 80)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCapacidadCongelador)
                                    .addComponent(jLabelCapacidadFrigorifico)
                                    .addComponent(jLabelMaterialNevera)
                                    .addComponent(jLabelTamañoNevera)
                                    .addComponent(jLabelSistemaNevera))
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jTextFieldMaterialNevera, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCapacidadFrigorifico, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldCapacidadCongelador, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldTamañoNevera, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jTextFieldSistemaNevera, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(261, 261, 261)
                        .addComponent(jLabelMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonOrdenarNombreAsc)
                            .addComponent(jButtonOrdenarNombreDesc))
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonOrdenarPrecioDesc)
                                .addGap(18, 18, 18)
                                .addComponent(botonFileChooserExaminar))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonOrdenarPrecioAsc)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonOrdenarID)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonModificar)
                    .addComponent(jButtonConsultarUno)
                    .addComponent(jButtonConsultarTodo)
                    .addComponent(jButtonBorrarUno)
                    .addComponent(jButtonBorrarTodos)
                    .addComponent(jButtonInsertar))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelId)
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelMarca)
                                    .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelNombre)
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCantidad)
                                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelPrecio)
                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCapacidadCongelador)
                                    .addComponent(jTextFieldCapacidadCongelador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCapacidadFrigorifico)
                                    .addComponent(jTextFieldCapacidadFrigorifico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelMaterialNevera)
                                    .addComponent(jTextFieldMaterialNevera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelTamañoNevera)
                                    .addComponent(jTextFieldTamañoNevera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelSistemaNevera)
                                    .addComponent(jTextFieldSistemaNevera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelColor)
                            .addComponent(jTextFieldColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jButtonInsertar)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonModificar)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonConsultarUno)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonConsultarTodo)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonBorrarUno)
                        .addGap(18, 18, 18)
                        .addComponent(jButtonBorrarTodos))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelTitulo)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonOrdenarNombreAsc)
                            .addComponent(jButtonOrdenarPrecioAsc)
                            .addComponent(jButtonOrdenarID))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonOrdenarNombreDesc)
                            .addComponent(jButtonOrdenarPrecioDesc)
                            .addComponent(botonFileChooserExaminar))
                        .addGap(49, 49, 49))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldCapacidadCongeladorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCapacidadCongeladorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCapacidadCongeladorActionPerformed

    private void jButtonConsultarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarTodoActionPerformed

        mannev.consultarTodos();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }

    }//GEN-LAST:event_jButtonConsultarTodoActionPerformed

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed

        Neveras nev = new Neveras();

        try {
            if (!ValidaEnteros.validaEnteros(jTextFieldId.getText())) {
                throw new ValidaEnteros();
            }
            if (!ValidaCantidad.validaCantidad(jTextFieldCantidad.getText())) {
                throw new ValidaCantidad();
            }
            if (!ValidaFlotantes.validaFlotantes(jTextFieldPrecio.getText())) {
                throw new ValidaFlotantes();
            }
            if (!ValidaCapacidadAlmacenamiento.validaCapacidadAlmacenamiento(jTextFieldCapacidadCongelador.getText())) {
                throw new ValidaCapacidadAlmacenamiento();
            }
            if (ValidaMemoria.validaMemoria(jTextFieldCapacidadFrigorifico.getText())) {
                throw new ValidaMemoria();
            }
            if (!ValidaTamRueda.validaTamRueda(jTextFieldTamañoNevera.getText())) {
                throw new ValidaTamRueda();
            }
        } catch (ValidaEnteros e) {
            jLabelMensaje.setText("El id que ingreso no es valido");
            jTextFieldId.setText("");
            return;
        } catch (ValidaCantidad e) {
            jLabelMensaje.setText("La cantidad que ingreso no es valida");
            jTextFieldCantidad.setText("");
            return;
        } catch (ValidaFlotantes e) {
            jLabelMensaje.setText("El precio que ingreso no es valido");
            jTextFieldPrecio.setText("");
            return;
        } catch (ValidaCapacidadAlmacenamiento e) {
            jLabelMensaje.setText("La capacidad de congelador que ingreso no es valida");
            jTextFieldCapacidadCongelador.setText("");
            return;
        } catch (ValidaMemoria e) {
            jLabelMensaje.setText("La capacidad de frigorifico que ingreso no es valida");
            jTextFieldCapacidadFrigorifico.setText("");
            return;
        } catch (ValidaTamRueda e) {
            jLabelMensaje.setText("El tamaño que ingreso no es valido");
            jTextFieldTamañoNevera.setText("");
            return;
        }

        Marca mar = new Marca();
        nev.setIdArticulo(Integer.parseInt(jTextFieldId.getText()));
        mar.setId(idMarcaTemporal);
        mar.setDescripcion(nombreMarcaTemporal);
        nev.setMar(mar);
        nev.setNombre(jTextFieldNombre.getText());
        nev.setCantidad(Integer.parseInt(jTextFieldCantidad.getText()));
        nev.setPrecio(Float.parseFloat(jTextFieldPrecio.getText()));
        nev.setColor(jTextFieldColor.getText());
        nev.setCapcongelador(jTextFieldCapacidadCongelador.getText());
        nev.setCapfrigorifero(jTextFieldCapacidadFrigorifico.getText());
        nev.setMaterial(jTextFieldMaterialNevera.getText());
        nev.setTamaño(Integer.parseInt(jTextFieldTamañoNevera.getText()));
        nev.setSistema(jTextFieldSistemaNevera.getText());

        if (mannev.insertar(nev)) {
            jLabelMensaje.setText("El articulo " + jTextFieldNombre.getText() + " se insertó correctamente");
            //JOptionPane.showMessageDialog(this, "El articulo " + jTextFieldNombre.getText() + " se insertó correctamente");
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(jTextFieldId.getText(), indiceFila, 0);
            jTable1.setValueAt(nombreMarcaTemporal, indiceFila, 1);
            jTable1.setValueAt(jTextFieldNombre.getText(), indiceFila, 2);
            jTable1.setValueAt(jTextFieldCantidad.getText(), indiceFila, 3);
            jTable1.setValueAt(Float.parseFloat(jTextFieldPrecio.getText()), indiceFila, 4);
            jTable1.setValueAt(jTextFieldColor.getText(), indiceFila, 5);
            jTable1.setValueAt(jTextFieldCapacidadCongelador.getText(), indiceFila, 6);
            jTable1.setValueAt(jTextFieldCapacidadFrigorifico.getText(), indiceFila, 7);
            jTable1.setValueAt(jTextFieldMaterialNevera.getText(), indiceFila, 8);
            jTable1.setValueAt(Integer.parseInt(jTextFieldTamañoNevera.getText()), indiceFila, 9);
            jTable1.setValueAt(jTextFieldSistemaNevera.getText(), indiceFila, 10);
            jTable1.setValueAt(ruta, indiceFila, 11);
            jTable1.setValueAt(new ImageIcon(ruta), indiceFila, 11);
            ruta = "E:\\daniel\\Descargas\\graySquare.jpeg";
            image = new ImageIcon(ruta);
            labelImagen.setIcon(image);
            indiceFila++;
            mannev.consultarTodos();
        } else {
            jLabelMensaje.setText("Error al insertar");
            //JOptionPane.showMessageDialog(this, "Error al insertar");
        }
        limpiar();
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        System.out.println(filaSeleccionada);

        if (filaSeleccionada >= 0) {

            Neveras nevmod = new Neveras();
            int a = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
            jTextFieldId.setText(jTable1.getValueAt(filaSeleccionada, 0).toString());
            String nombreMarcaMod = jTable1.getValueAt(filaSeleccionada, 1).toString();
            jTextFieldNombre.setText(jTable1.getValueAt(filaSeleccionada, 2).toString());
            jTextFieldCantidad.setText(jTable1.getValueAt(filaSeleccionada, 3).toString());
            jTextFieldPrecio.setText(jTable1.getValueAt(filaSeleccionada, 4).toString());
            jTextFieldColor.setText(jTable1.getValueAt(filaSeleccionada, 5).toString());
            jTextFieldCapacidadCongelador.setText(jTable1.getValueAt(filaSeleccionada, 6).toString());
            jTextFieldCapacidadFrigorifico.setText(jTable1.getValueAt(filaSeleccionada, 7).toString());
            jTextFieldMaterialNevera.setText(jTable1.getValueAt(filaSeleccionada, 8).toString());
            jTextFieldTamañoNevera.setText(jTable1.getValueAt(filaSeleccionada, 9).toString());
            jTextFieldSistemaNevera.setText(jTable1.getValueAt(filaSeleccionada, 10).toString());

            try {

                if (!ValidaCantidad.validaCantidad(jTextFieldCantidad.getText())) {
                    throw new ValidaCantidad();
                }
                if (!ValidaFlotantes.validaFlotantes(jTextFieldPrecio.getText())) {
                    throw new ValidaFlotantes();
                }
                if (!ValidaCapacidadAlmacenamiento.validaCapacidadAlmacenamiento(jTextFieldCapacidadCongelador.getText())) {
                    throw new ValidaCapacidadAlmacenamiento();
                }
                if (ValidaMemoria.validaMemoria(jTextFieldCapacidadFrigorifico.getText())) {
                    throw new ValidaMemoria();
                }
                if (!ValidaTamRueda.validaTamRueda(jTextFieldTamañoNevera.getText())) {
                    throw new ValidaTamRueda();
                }
            } catch (ValidaCantidad e) {
                jLabelMensaje.setText("La cantidad que ingreso no es valida");
                jTextFieldCantidad.setText("");
                return;
            } catch (ValidaFlotantes e) {
                jLabelMensaje.setText("El precio que ingreso no es valido");
                jTextFieldPrecio.setText("");
                return;
            } catch (ValidaCapacidadAlmacenamiento e) {
                jLabelMensaje.setText("La capacidad de congelador que ingreso no es valida");
                jTextFieldCapacidadCongelador.setText("");
                return;
            } catch (ValidaMemoria e) {
                jLabelMensaje.setText("La capacidad de frigorifico que ingreso no es valida");
                jTextFieldCapacidadFrigorifico.setText("");
                return;
            } catch (ValidaTamRueda e) {
                jLabelMensaje.setText("El tamaño que ingreso no es valido");
                jTextFieldTamañoNevera.setText("");
                return;
            }
            Marca marmod = new Marca();
            nevmod.setIdArticulo(Integer.parseInt(jTextFieldId.getText()));
            marmod.setId(a);
            marmod.setDescripcion(nombreMarcaMod);
            nevmod.setMar(marmod);
            nevmod.setNombre(jTextFieldNombre.getText());
            nevmod.setCantidad(Integer.parseInt(jTextFieldCantidad.getText()));
            nevmod.setPrecio(Float.parseFloat(jTextFieldPrecio.getText()));
            nevmod.setColor(jTextFieldColor.getText());
            nevmod.setCapcongelador(jTextFieldCapacidadCongelador.getText());
            nevmod.setCapfrigorifero(jTextFieldCapacidadFrigorifico.getText());
            nevmod.setMaterial(jTextFieldMaterialNevera.getText());
            nevmod.setTamaño(Integer.parseInt(jTextFieldTamañoNevera.getText()));
            nevmod.setSistema(jTextFieldSistemaNevera.getText());

            //Marca marmod = new Marca(Integer.parseInt(jTextFieldId.getText()), jTextFieldMarca.getText());
            int posicion = mannev.busquedaBinaria(a);
            if (!(posicion == -1)) {
                if (mannev.modificar(posicion, nevmod)) {
                    JOptionPane.showMessageDialog(this, "Nevera modificada exitosamente");
                    indiceFila--;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error al modificar");
            }
        }
        limpiar();
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonConsultarUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarUnoActionPerformed

        int idBuscado = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite el ID a buscar"));

        Neveras resultado = (Neveras) mannev.consultarId(idBuscado);
        if (resultado == null) {
            JOptionPane.showMessageDialog(this, "Nevera no encontrada");
        } else {
            JOptionPane.showMessageDialog(this, "La Nevera encontrada es:\n" + resultado.toString());
        }

    }//GEN-LAST:event_jButtonConsultarUnoActionPerformed

    private void jButtonBorrarUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarUnoActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idEliminar = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
            model.removeRow(filaSeleccionada);
            if (mannev.borrar(idEliminar)) {
                JOptionPane.showMessageDialog(this, "Nevera borrada exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al borrar");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error al borrar");
        }

    }//GEN-LAST:event_jButtonBorrarUnoActionPerformed

    private void jButtonBorrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarTodosActionPerformed

        if (mannev.borrarTodo()) {
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            indiceFila = 0;
            JOptionPane.showMessageDialog(this, "Todas las Neveras se borraron exitosamente");
        } else {
            JOptionPane.showMessageDialog(this, "Error al borrar todo");
        }

    }//GEN-LAST:event_jButtonBorrarTodosActionPerformed

    private void jComboBoxMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMarcaItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jComboBoxMarca.getItemCount() > 0) {
                idMarcaTemporal = ManejadorObjetos.arregloMarcas.get(jComboBoxMarca.getSelectedIndex()).getId();
                nombreMarcaTemporal = ManejadorObjetos.arregloMarcas.get(jComboBoxMarca.getSelectedIndex()).getDescripcion();
            }
        }


    }//GEN-LAST:event_jComboBoxMarcaItemStateChanged

    private void jButtonOrdenarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarIDActionPerformed
        mannev.sort();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarIDActionPerformed

    private void jButtonOrdenarNombreAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarNombreAscActionPerformed
        mannev.ordenarMezcla();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarNombreAscActionPerformed

    private void jButtonOrdenarPrecioAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarPrecioAscActionPerformed
        mannev.quicksort();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarPrecioAscActionPerformed

    private void jButtonOrdenarNombreDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarNombreDescActionPerformed
        mannev.ordenarMezclaDesc();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarNombreDescActionPerformed

    private void jButtonOrdenarPrecioDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarPrecioDescActionPerformed
        mannev.quicksortDesc();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectrodomesticos.arregloneveras.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapcongelador(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getCapfrigorifero(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getMaterial(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getTamaño(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectrodomesticos.arregloneveras.get(i).getSistema(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarPrecioDescActionPerformed

    private void botonFileChooserExaminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFileChooserExaminarActionPerformed
        fileChooser.showDialog(this, "Choose"); //
        archivo = fileChooser.getSelectedFile();
        ruta = archivo.getAbsolutePath();
        image = new ImageIcon(ruta);
        labelImagen.setIcon(image);
    }//GEN-LAST:event_botonFileChooserExaminarActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MenuNeverasInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MenuNeverasInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MenuNeverasInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MenuNeverasInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MenuNeverasInter().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonFileChooserExaminar;
    private javax.swing.JButton jButtonBorrarTodos;
    private javax.swing.JButton jButtonBorrarUno;
    private javax.swing.JButton jButtonConsultarTodo;
    private javax.swing.JButton jButtonConsultarUno;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonOrdenarID;
    private javax.swing.JButton jButtonOrdenarNombreAsc;
    private javax.swing.JButton jButtonOrdenarNombreDesc;
    private javax.swing.JButton jButtonOrdenarPrecioAsc;
    private javax.swing.JButton jButtonOrdenarPrecioDesc;
    private javax.swing.JComboBox<String> jComboBoxMarca;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelCapacidadCongelador;
    private javax.swing.JLabel jLabelCapacidadFrigorifico;
    private javax.swing.JLabel jLabelColor;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelMaterialNevera;
    private javax.swing.JLabel jLabelMensaje;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelSistemaNevera;
    private javax.swing.JLabel jLabelTamañoNevera;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldCapacidadCongelador;
    private javax.swing.JTextField jTextFieldCapacidadFrigorifico;
    private javax.swing.JTextField jTextFieldColor;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldMaterialNevera;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldSistemaNevera;
    private javax.swing.JTextField jTextFieldTamañoNevera;
    private javax.swing.JPanel panelImagen;
    // End of variables declaration//GEN-END:variables
}
