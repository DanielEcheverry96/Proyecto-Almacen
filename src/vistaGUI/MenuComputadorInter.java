/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vistaGUI;

import controlador.ManejadorObjetos;
import javax.swing.table.DefaultTableModel;
import modelo.Computadores;
import controlador.ManejadorComputadores;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import modelo.CategoriaElectronicosOficina;
import modelo.Marca;

/**
 *
 * @author Daniel
 */
public class MenuComputadorInter extends javax.swing.JFrame {

    ManejadorObjetos manObjetos;
    CategoriaElectronicosOficina mancate;
    ManejadorComputadores mancop;
    Integer idMarcaTemporal = null;
    String nombreMarcaTemporal = " ";
    DefaultTableModel model;
    int indiceFila = 0;
    String[] dato = new String[11];
    JFileChooser fileChooser = new JFileChooser();
    ImageIcon image = null;
    File archivo = null;
    String ruta = "E:\\daniel\\Descargas\\graySquare.jpeg";
    JLabel labelImagen = new JLabel("", new ImageIcon(ruta), JLabel.CENTER);

    /**
     * Creates new form MenuComputadorInter
     */
    //String capmemoria, String tipoteclado, String tipomouse, String tipopantalla, int capalmacenamiento, int idMarca, int idArticulo, String nombre, int cantidad, float precio, String descripcion, String color, String imagen, Marca mar
    public MenuComputadorInter() {
        initComponents();
        this.setLocationRelativeTo(null);
        manObjetos = new ManejadorObjetos();
        mancate = new CategoriaElectronicosOficina();
        mancop = new ManejadorComputadores();
        model = new DefaultTableModel();
        model.addColumn("ID");
        model.addColumn("Marca");
        model.addColumn("Nombre");
        model.addColumn("Cantidad");
        model.addColumn("Precio");
        model.addColumn("Color");
        model.addColumn("Capacidad memoria");
        model.addColumn("Tipo Teclado");
        model.addColumn("Tipo Mouse");
        model.addColumn("Tipo Pantalla");
        model.addColumn("Capacidad Almacenamiento");
        jTable1.setModel(model);
        model.insertRow(indiceFila, dato);
        inicializarComboBox();
        fileChooser.setAcceptAllFileFilterUsed(false);
        FileFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
         fileChooser.addChoosableFileFilter(imageFilter);
         panelImagen.setPreferredSize(new Dimension(132, 132));
         panelImagen.add(labelImagen, BorderLayout.CENTER);
    }

    public void inicializarComboBox() {
        for (int i = 0; i < manObjetos.arregloMarcas.size(); i++) {
            jComboBoxMarca.addItem(manObjetos.arregloMarcas.get(i).getDescripcion());
        }
    }

    public void limpiar() {
        jTextFieldId.setText("");
        jTextFieldNombre.setText("");
        jTextFieldCantidad.setText("");
        jTextFieldPrecio.setText("");
        jTextFieldColor.setText("");
        jTextFieldUrl.setText("");
        jTextFieldCapacidadMemoria.setText("");
        jTextFieldTipoTeclado.setText("");
        jTextFieldTipoMouse.setText("");
        jTextFieldTipoPantalla.setText("");
        jTextFieldCapacidadAlmacenamiento.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabelTitulo = new javax.swing.JLabel();
        jLabelId = new javax.swing.JLabel();
        jComboBoxMarca = new javax.swing.JComboBox<>();
        jLabelMarca = new javax.swing.JLabel();
        jLabelNombre = new javax.swing.JLabel();
        jLabelCantidad = new javax.swing.JLabel();
        jLabelPrecio = new javax.swing.JLabel();
        jLabelColor = new javax.swing.JLabel();
        jLabelUrl = new javax.swing.JLabel();
        jLabelTipMouse = new javax.swing.JLabel();
        jLabelTipTeclado = new javax.swing.JLabel();
        jLabelCapMemoria = new javax.swing.JLabel();
        jLabelTipPantalla = new javax.swing.JLabel();
        jTextFieldId = new javax.swing.JTextField();
        jTextFieldNombre = new javax.swing.JTextField();
        jTextFieldCantidad = new javax.swing.JTextField();
        jTextFieldPrecio = new javax.swing.JTextField();
        jTextFieldColor = new javax.swing.JTextField();
        jTextFieldUrl = new javax.swing.JTextField();
        jTextFieldTipoMouse = new javax.swing.JTextField();
        jTextFieldTipoTeclado = new javax.swing.JTextField();
        jTextFieldCapacidadMemoria = new javax.swing.JTextField();
        jTextFieldTipoPantalla = new javax.swing.JTextField();
        jButtonModificar = new javax.swing.JButton();
        jButtonConsultarUno = new javax.swing.JButton();
        jButtonConsultarTodo = new javax.swing.JButton();
        jButtonBorrarUno = new javax.swing.JButton();
        jButtonBorrarTodos = new javax.swing.JButton();
        jLabelCapacidadAlmacenamiento = new javax.swing.JLabel();
        jTextFieldCapacidadAlmacenamiento = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabelMensaje = new javax.swing.JLabel();
        jButtonInsertar = new javax.swing.JButton();
        jButtonOrdenarNombreAsc = new javax.swing.JButton();
        jButtonOrdenarPrecioAsc = new javax.swing.JButton();
        jButtonOrdenarNombreDesc = new javax.swing.JButton();
        jButtonOrdenarPrecioDesc = new javax.swing.JButton();
        jButtonOrdenarID = new javax.swing.JButton();
        panelImagen = new javax.swing.JPanel();
        botonFileChooser = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        jLabel2.setText("jLabel2");

        setTitle("Computadores");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabelTitulo.setFont(new java.awt.Font("Segoe UI Historic", 3, 36)); // NOI18N
        jLabelTitulo.setText("Computador");

        jLabelId.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelId.setText("Id");

        jComboBoxMarca.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxMarcaItemStateChanged(evt);
            }
        });

        jLabelMarca.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelMarca.setText("Marca");

        jLabelNombre.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelNombre.setText("Nombre");

        jLabelCantidad.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCantidad.setText("Cantidad");

        jLabelPrecio.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelPrecio.setText("Precio");

        jLabelColor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelColor.setText("Color");

        jLabelUrl.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelUrl.setText("Url");

        jLabelTipMouse.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTipMouse.setText("Tipo Mouse");

        jLabelTipTeclado.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTipTeclado.setText("Tipo Teclado");

        jLabelCapMemoria.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCapMemoria.setText("Capacidad Memoria");

        jLabelTipPantalla.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelTipPantalla.setText("Tipo Pantalla");

        jTextFieldCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCantidadActionPerformed(evt);
            }
        });

        jButtonModificar.setText("Modificar");
        jButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonModificarActionPerformed(evt);
            }
        });

        jButtonConsultarUno.setText("Consultar Uno");
        jButtonConsultarUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarUnoActionPerformed(evt);
            }
        });

        jButtonConsultarTodo.setText("Consultar Todo");
        jButtonConsultarTodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonConsultarTodoActionPerformed(evt);
            }
        });

        jButtonBorrarUno.setText("Borrar Uno");
        jButtonBorrarUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarUnoActionPerformed(evt);
            }
        });

        jButtonBorrarTodos.setText("Borrar Todos");
        jButtonBorrarTodos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBorrarTodosActionPerformed(evt);
            }
        });

        jLabelCapacidadAlmacenamiento.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelCapacidadAlmacenamiento.setText("Capacidad Almacenamiento");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jLabelMensaje.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabelMensaje.setText("Estado");

        jButtonInsertar.setText("Insertar");
        jButtonInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonInsertarActionPerformed(evt);
            }
        });

        jButtonOrdenarNombreAsc.setText("Ordenar Nombre Ascendente");
        jButtonOrdenarNombreAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarNombreAscActionPerformed(evt);
            }
        });

        jButtonOrdenarPrecioAsc.setText("Ordenar Precio Ascendente");
        jButtonOrdenarPrecioAsc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarPrecioAscActionPerformed(evt);
            }
        });

        jButtonOrdenarNombreDesc.setText("Ordenar Nombre Descendente");
        jButtonOrdenarNombreDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarNombreDescActionPerformed(evt);
            }
        });

        jButtonOrdenarPrecioDesc.setText("Ordenar Precio Descendente");
        jButtonOrdenarPrecioDesc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarPrecioDescActionPerformed(evt);
            }
        });

        jButtonOrdenarID.setText("Ordenar ID");
        jButtonOrdenarID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOrdenarIDActionPerformed(evt);
            }
        });

        panelImagen.setBackground(new java.awt.Color(204, 204, 204));
        panelImagen.setLayout(new java.awt.BorderLayout());

        botonFileChooser.setText("Examinar...");
        botonFileChooser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonFileChooserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(147, 147, 147)
                        .addComponent(jLabelMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabelColor)
                                            .addComponent(jLabelUrl))
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextFieldUrl)
                                            .addComponent(jTextFieldColor, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addComponent(jLabelId)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelMarca)
                                                    .addComponent(jLabelNombre)
                                                    .addComponent(jLabelCantidad)
                                                    .addComponent(jLabelPrecio))
                                                .addGap(56, 56, 56)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jComboBoxMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(jTextFieldNombre)
                                                    .addComponent(jTextFieldCantidad)
                                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(44, 44, 44)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabelTipMouse)
                                                    .addComponent(jLabelTipTeclado)
                                                    .addComponent(jLabelCapMemoria))
                                                .addGap(67, 67, 67)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jTextFieldTipoTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jTextFieldTipoMouse, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(jLabelCapacidadAlmacenamiento)
                                                .addGroup(layout.createSequentialGroup()
                                                    .addComponent(jLabelTipPantalla)
                                                    .addGap(99, 99, 99)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jTextFieldCapacidadMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(jTextFieldCapacidadAlmacenamiento)
                                                            .addComponent(jTextFieldTipoPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))))))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonOrdenarNombreDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonOrdenarNombreAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButtonOrdenarPrecioDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButtonOrdenarPrecioAsc, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(40, 40, 40)
                                .addComponent(jButtonOrdenarID)
                                .addGap(31, 31, 31)
                                .addComponent(botonFileChooser))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButtonConsultarTodo)
                            .addComponent(jButtonBorrarUno)
                            .addComponent(jButtonConsultarUno, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonModificar)
                                    .addComponent(jButtonInsertar)))
                            .addComponent(jButtonBorrarTodos, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButtonInsertar))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelTitulo)))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButtonModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButtonConsultarUno)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonConsultarTodo)
                        .addGap(14, 14, 14)
                        .addComponent(jButtonBorrarUno)
                        .addGap(15, 15, 15)
                        .addComponent(jButtonBorrarTodos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(panelImagen, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jTextFieldTipoMouse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(7, 7, 7)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabelId, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabelTipMouse, javax.swing.GroupLayout.Alignment.TRAILING)))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(3, 3, 3)
                                    .addComponent(jLabelNombre)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabelMarca)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabelCantidad)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabelPrecio)
                                    .addGap(3, 3, 3))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jTextFieldNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(8, 8, 8)
                                    .addComponent(jComboBoxMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(8, 8, 8)
                                    .addComponent(jTextFieldCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(8, 8, 8)
                                    .addComponent(jTextFieldPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelTipTeclado)
                                    .addComponent(jTextFieldTipoTeclado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelCapMemoria)
                                    .addComponent(jTextFieldCapacidadMemoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addComponent(jLabelTipPantalla))
                                    .addComponent(jTextFieldTipoPantalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(8, 8, 8)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabelCapacidadAlmacenamiento)
                                    .addComponent(jTextFieldCapacidadAlmacenamiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(jLabelColor)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelUrl))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jTextFieldColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jTextFieldUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonOrdenarNombreAsc)
                                    .addComponent(jButtonOrdenarPrecioAsc))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonOrdenarNombreDesc)
                                    .addComponent(jButtonOrdenarPrecioDesc)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jButtonOrdenarID)
                                    .addComponent(botonFileChooser))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabelMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonConsultarTodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarTodoActionPerformed

        mancop.consultarTodos();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }

    }//GEN-LAST:event_jButtonConsultarTodoActionPerformed

    private void jTextFieldCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCantidadActionPerformed

    private void jButtonInsertarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonInsertarActionPerformed
        Computadores comp = new Computadores();

        try {
            if (!ValidaEnteros.validaEnteros(jTextFieldId.getText())) {
                throw new ValidaEnteros();
            }
            if (!ValidaCantidad.validaCantidad(jTextFieldCantidad.getText())) {
                throw new ValidaCantidad();
            }
            if (!ValidaFlotantes.validaFlotantes(jTextFieldPrecio.getText())) {
                throw new ValidaFlotantes();
            }
            if (!ValidaMemoria.validaMemoria(jTextFieldCapacidadMemoria.getText())) {
                throw new ValidaMemoria();
            }
            if (!ValidaCapacidadAlmacenamiento.validaCapacidadAlmacenamiento(jTextFieldCapacidadAlmacenamiento.getText())) {
                throw new ValidaCapacidadAlmacenamiento();
            }
        } catch (ValidaEnteros e) {
            jLabelMensaje.setText("El id que ingreso no es valido");
            jTextFieldId.setText("");
            return;
        } catch (ValidaCantidad e) {
            jLabelMensaje.setText("La cantidad que ingreso no es valida");
            jTextFieldCantidad.setText("");
            return;
        } catch (ValidaFlotantes e) {
            jLabelMensaje.setText("El precio que ingreso no es valido");
            jTextFieldPrecio.setText("");
            return;
        } catch (ValidaMemoria e) {
            jLabelMensaje.setText("La capacidad de memoria que ingreso no es valida");
            jTextFieldCapacidadMemoria.setText("");
            return;
        } catch (ValidaCapacidadAlmacenamiento e) {
            jLabelMensaje.setText("La capacidad de almacenamiento que ingreso no es valida");
            jTextFieldCapacidadAlmacenamiento.setText("");
            return;
        }

        Marca mar = new Marca();
        comp.setIdArticulo(Integer.parseInt(jTextFieldId.getText()));
        mar.setId(idMarcaTemporal);
        mar.setDescripcion(nombreMarcaTemporal);
        comp.setMar(mar);
        comp.setNombre(jTextFieldNombre.getText());
        comp.setCantidad(Integer.parseInt(jTextFieldCantidad.getText()));
        comp.setPrecio(Float.parseFloat(jTextFieldPrecio.getText()));
        comp.setColor(jTextFieldColor.getText());
        comp.setImagen(ruta);
        comp.setCapmemoria(jTextFieldCapacidadMemoria.getText());
        comp.setTipoteclado(jTextFieldTipoTeclado.getText());
        comp.setTipomouse(jTextFieldTipoMouse.getText());
        comp.setTipopantalla(jTextFieldTipoPantalla.getText());
        comp.setCapalmacenamiento(Integer.parseInt(jTextFieldCapacidadAlmacenamiento.getText()));

        if (mancop.insertar(comp)) {
            jLabelMensaje.setText("Computador Insertado");
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(jTextFieldId.getText(), indiceFila, 0);
            jTable1.setValueAt(nombreMarcaTemporal, indiceFila, 1);
            jTable1.setValueAt(jTextFieldNombre.getText(), indiceFila, 2);
            jTable1.setValueAt(Integer.parseInt(jTextFieldCantidad.getText()), indiceFila, 3);
            jTable1.setValueAt(Float.parseFloat(jTextFieldPrecio.getText()), indiceFila, 4);
            jTable1.setValueAt(jTextFieldColor.getText(), indiceFila, 5);
            jTable1.setValueAt(jTextFieldCapacidadMemoria.getText(), indiceFila, 6);
            jTable1.setValueAt(jTextFieldTipoTeclado.getText(), indiceFila, 7);
            jTable1.setValueAt(jTextFieldTipoMouse.getText(), indiceFila, 8);
            jTable1.setValueAt(jTextFieldTipoPantalla.getText(), indiceFila, 9);
            jTable1.setValueAt(Integer.parseInt(jTextFieldCapacidadAlmacenamiento.getText()), indiceFila, 10);
            ruta = "E:\\daniel\\Descargas\\graySquare.jpeg";
            image = new ImageIcon(ruta);
            labelImagen.setIcon(image);
            indiceFila++;
            mancop.consultarTodos();
        } else {
            jLabelMensaje.setText("Computador no insertado");
        }

        limpiar();
    }//GEN-LAST:event_jButtonInsertarActionPerformed

    private void jButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonModificarActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        System.out.println(filaSeleccionada);

        if (filaSeleccionada >= 0) {

            Computadores compmod = new Computadores();
            int a = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
            jTextFieldId.setText(jTable1.getValueAt(filaSeleccionada, 0).toString());
            String nombreMarcaMod = jTable1.getValueAt(filaSeleccionada, 1).toString();
            jTextFieldNombre.setText(jTable1.getValueAt(filaSeleccionada, 2).toString());
            jTextFieldCantidad.setText(jTable1.getValueAt(filaSeleccionada, 3).toString());
            jTextFieldPrecio.setText(jTable1.getValueAt(filaSeleccionada, 4).toString());
            jTextFieldColor.setText(jTable1.getValueAt(filaSeleccionada, 5).toString());
            jTextFieldCapacidadMemoria.setText(jTable1.getValueAt(filaSeleccionada, 6).toString());
            jTextFieldTipoTeclado.setText(jTable1.getValueAt(filaSeleccionada, 7).toString());
            jTextFieldTipoMouse.setText(jTable1.getValueAt(filaSeleccionada, 8).toString());
            jTextFieldTipoPantalla.setText(jTable1.getValueAt(filaSeleccionada, 9).toString());
            jTextFieldCapacidadAlmacenamiento.setText(jTable1.getValueAt(filaSeleccionada, 10).toString());

            try {
                if (!ValidaCantidad.validaCantidad(jTextFieldCantidad.getText())) {
                    throw new ValidaCantidad();
                }
                if (!ValidaFlotantes.validaFlotantes(jTextFieldPrecio.getText())) {
                    throw new ValidaFlotantes();
                }
                if (!ValidaMemoria.validaMemoria(jTextFieldCapacidadMemoria.getText())) {
                    throw new ValidaMemoria();
                }
                if (!ValidaCapacidadAlmacenamiento.validaCapacidadAlmacenamiento(jTextFieldCapacidadAlmacenamiento.getText())) {
                    throw new ValidaCapacidadAlmacenamiento();
                }
            } catch (ValidaCantidad e) {
                jLabelMensaje.setText("La cantidad que ingreso no es valida");
                jTextFieldCantidad.setText("");
                return;
            } catch (ValidaFlotantes e) {
                jLabelMensaje.setText("El precio que ingreso no es valido");
                jTextFieldPrecio.setText("");
                return;
            } catch (ValidaMemoria e) {
                jLabelMensaje.setText("La capacidad de memoria que ingreso no es valida");
                jTextFieldCapacidadMemoria.setText("");
                return;
            } catch (ValidaCapacidadAlmacenamiento e) {
                jLabelMensaje.setText("La capacidad de almacenamiento que ingreso no es valida");
                jTextFieldCapacidadAlmacenamiento.setText("");
                return;
            }
            Marca marmod = new Marca();
            compmod.setIdArticulo(Integer.parseInt(jTextFieldId.getText()));
            marmod.setId(a);
            marmod.setDescripcion(nombreMarcaMod);
            compmod.setMar(marmod);
            compmod.setNombre(jTextFieldNombre.getText());
            compmod.setCantidad(Integer.parseInt(jTextFieldCantidad.getText()));
            compmod.setPrecio(Float.parseFloat(jTextFieldPrecio.getText()));
            compmod.setColor(jTextFieldColor.getText());
            compmod.setCapmemoria(jTextFieldCapacidadMemoria.getText());
            compmod.setTipoteclado(jTextFieldTipoTeclado.getText());
            compmod.setTipomouse(jTextFieldTipoMouse.getText());
            compmod.setTipopantalla(jTextFieldTipoPantalla.getText());
            compmod.setCapalmacenamiento(Integer.parseInt(jTextFieldCapacidadAlmacenamiento.getText()));

            //Marca marmod = new Marca(Integer.parseInt(jTextFieldId.getText()), jTextFieldMarca.getText());
            int posicion = mancop.busquedaBinaria(a);
            if (!(posicion == -1)) {
                if (mancop.modificar(posicion, compmod)) {
                    JOptionPane.showMessageDialog(this, "Computador modificado exitosamente");
                    indiceFila--;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Error al modificar");
            }
        }

        limpiar();
    }//GEN-LAST:event_jButtonModificarActionPerformed

    private void jButtonConsultarUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonConsultarUnoActionPerformed

        int idBuscado = Integer.parseInt(JOptionPane.showInputDialog(this, "Digite el ID a buscar"));

        Computadores resultado = (Computadores) mancop.consultarId(idBuscado);
        if (resultado == null) {
            JOptionPane.showMessageDialog(this, "Computador no encontrado");
        } else {
            JOptionPane.showMessageDialog(this, "El Computador encontrado es:\n" + resultado.toString());
        }

    }//GEN-LAST:event_jButtonConsultarUnoActionPerformed

    private void jButtonBorrarUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarUnoActionPerformed

        int filaSeleccionada = jTable1.getSelectedRow();
        if (filaSeleccionada >= 0) {
            int idEliminar = Integer.parseInt(jTable1.getValueAt(filaSeleccionada, 0).toString());
            model.removeRow(filaSeleccionada);
            if (mancop.borrar(idEliminar)) {
                JOptionPane.showMessageDialog(this, "Computador borrado exitosamente");
            } else {
                JOptionPane.showMessageDialog(this, "Error al borrar");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Error al borrar");
        }


    }//GEN-LAST:event_jButtonBorrarUnoActionPerformed

    private void jButtonBorrarTodosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBorrarTodosActionPerformed

        if (mancop.borrarTodo()) {
            while (model.getRowCount() > 0) {
                model.removeRow(0);
            }
            indiceFila = 0;
            JOptionPane.showMessageDialog(this, "Todos los computaores se borraron exitosamente");
        } else {
            JOptionPane.showMessageDialog(this, "Error al borrar todo");
        }

    }//GEN-LAST:event_jButtonBorrarTodosActionPerformed

    private void jComboBoxMarcaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxMarcaItemStateChanged

        if (evt.getStateChange() == ItemEvent.SELECTED) {
            if (jComboBoxMarca.getItemCount() > 0) {
                idMarcaTemporal = ManejadorObjetos.arregloMarcas.get(jComboBoxMarca.getSelectedIndex()).getId();
                nombreMarcaTemporal = ManejadorObjetos.arregloMarcas.get(jComboBoxMarca.getSelectedIndex()).getDescripcion();
            }
        }

    }//GEN-LAST:event_jComboBoxMarcaItemStateChanged

    private void jButtonOrdenarNombreAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarNombreAscActionPerformed
        mancop.ordenarMezcla();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarNombreAscActionPerformed

    private void jButtonOrdenarPrecioAscActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarPrecioAscActionPerformed
        mancop.quicksort();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarPrecioAscActionPerformed

    private void jButtonOrdenarNombreDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarNombreDescActionPerformed
        mancop.ordenarMezclaDesc();
        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarNombreDescActionPerformed

    private void jButtonOrdenarPrecioDescActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarPrecioDescActionPerformed
        mancop.quicksortDesc();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarPrecioDescActionPerformed

    private void jButtonOrdenarIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOrdenarIDActionPerformed
        mancop.sort();

        while (model.getRowCount() > 0) {
            model.removeRow(0);
        }

        indiceFila = 0;

        for (int i = 0; i < CategoriaElectronicosOficina.arreglocomputadores.size(); i++) {
            model.insertRow(indiceFila, dato);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getIdArticulo(), indiceFila, 0);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getMar().getDescripcion(), indiceFila, 1);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getNombre(), indiceFila, 2);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCantidad(), indiceFila, 3);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getPrecio(), indiceFila, 4);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getColor(), indiceFila, 5);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapmemoria(), indiceFila, 6);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipoteclado(), indiceFila, 7);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipomouse(), indiceFila, 8);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getTipopantalla(), indiceFila, 9);
            jTable1.setValueAt(CategoriaElectronicosOficina.arreglocomputadores.get(i).getCapalmacenamiento(), indiceFila, 10);
            indiceFila++;
        }
    }//GEN-LAST:event_jButtonOrdenarIDActionPerformed

    private void botonFileChooserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonFileChooserActionPerformed
        fileChooser.showDialog(this, "Choose"); //
        archivo = fileChooser.getSelectedFile();
        ruta = archivo.getAbsolutePath();
        image = new ImageIcon(ruta);
        labelImagen.setIcon(image);
    }//GEN-LAST:event_botonFileChooserActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(MenuComputadorInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(MenuComputadorInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(MenuComputadorInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(MenuComputadorInter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new MenuComputadorInter().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonFileChooser;
    private javax.swing.JButton jButtonBorrarTodos;
    private javax.swing.JButton jButtonBorrarUno;
    private javax.swing.JButton jButtonConsultarTodo;
    private javax.swing.JButton jButtonConsultarUno;
    private javax.swing.JButton jButtonInsertar;
    private javax.swing.JButton jButtonModificar;
    private javax.swing.JButton jButtonOrdenarID;
    private javax.swing.JButton jButtonOrdenarNombreAsc;
    private javax.swing.JButton jButtonOrdenarNombreDesc;
    private javax.swing.JButton jButtonOrdenarPrecioAsc;
    private javax.swing.JButton jButtonOrdenarPrecioDesc;
    private javax.swing.JComboBox<String> jComboBoxMarca;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelCantidad;
    private javax.swing.JLabel jLabelCapMemoria;
    private javax.swing.JLabel jLabelCapacidadAlmacenamiento;
    private javax.swing.JLabel jLabelColor;
    private javax.swing.JLabel jLabelId;
    private javax.swing.JLabel jLabelMarca;
    private javax.swing.JLabel jLabelMensaje;
    private javax.swing.JLabel jLabelNombre;
    private javax.swing.JLabel jLabelPrecio;
    private javax.swing.JLabel jLabelTipMouse;
    private javax.swing.JLabel jLabelTipPantalla;
    private javax.swing.JLabel jLabelTipTeclado;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelUrl;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextFieldCantidad;
    private javax.swing.JTextField jTextFieldCapacidadAlmacenamiento;
    private javax.swing.JTextField jTextFieldCapacidadMemoria;
    private javax.swing.JTextField jTextFieldColor;
    private javax.swing.JTextField jTextFieldId;
    private javax.swing.JTextField jTextFieldNombre;
    private javax.swing.JTextField jTextFieldPrecio;
    private javax.swing.JTextField jTextFieldTipoMouse;
    private javax.swing.JTextField jTextFieldTipoPantalla;
    private javax.swing.JTextField jTextFieldTipoTeclado;
    private javax.swing.JTextField jTextFieldUrl;
    private javax.swing.JPanel panelImagen;
    // End of variables declaration//GEN-END:variables
}
